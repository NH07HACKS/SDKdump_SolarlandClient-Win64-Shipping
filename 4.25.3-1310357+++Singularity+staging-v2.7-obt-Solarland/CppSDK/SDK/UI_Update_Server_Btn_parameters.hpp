#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Update_Server_Btn

#include "Basic.hpp"

#include "SolarUI_structs.hpp"
#include "E_Lobby_Latency_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_Update_Server_Btn.UI_Update_Server_Btn_C.ExecuteUbergraph_UI_Update_Server_Btn
// 0x0190 (0x0190 - 0x0000)
struct UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0048(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B8(0x0070)(ConstParm)
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform_1;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0130(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0158(0x0028)()
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn) == 0x000008, "Wrong alignment on UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn");
static_assert(sizeof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn) == 0x000190, "Wrong size on UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, EntryPoint) == 0x000000, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, CallFunc_BreakVector2D_X) == 0x000004, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, K2Node_Event_MyGeometry) == 0x000010, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, K2Node_Event_MouseEvent_1) == 0x000048, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, K2Node_Event_MouseEvent) == 0x0000B8, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, CallFunc_IsPCPlatform_IsPCPlatform) == 0x000128, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::CallFunc_IsPCPlatform_IsPCPlatform' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, CallFunc_IsPCPlatform_IsPCPlatform_1) == 0x000129, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::CallFunc_IsPCPlatform_IsPCPlatform_1' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, K2Node_MakeStruct_SlateColor) == 0x000130, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, K2Node_MakeStruct_SlateColor_1) == 0x000158, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, K2Node_Event_InLayoutType) == 0x000180, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, K2Node_SwitchEnum_CmpSuccess) == 0x000181, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, CallFunc_BreakVector2D_X_1) == 0x000184, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn, CallFunc_BreakVector2D_Y_1) == 0x000188, "Member 'UI_Update_Server_Btn_C_ExecuteUbergraph_UI_Update_Server_Btn::CallFunc_BreakVector2D_Y_1' has a wrong offset!");

// Function UI_Update_Server_Btn.UI_Update_Server_Btn_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_Update_Server_Btn_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Update_Server_Btn_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_Update_Server_Btn_C_ReceivePlatformLayout");
static_assert(sizeof(UI_Update_Server_Btn_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_Update_Server_Btn_C_ReceivePlatformLayout");
static_assert(offsetof(UI_Update_Server_Btn_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_Update_Server_Btn_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_Update_Server_Btn.UI_Update_Server_Btn_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct UI_Update_Server_Btn_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Update_Server_Btn_C_OnMouseLeave) == 0x000008, "Wrong alignment on UI_Update_Server_Btn_C_OnMouseLeave");
static_assert(sizeof(UI_Update_Server_Btn_C_OnMouseLeave) == 0x000070, "Wrong size on UI_Update_Server_Btn_C_OnMouseLeave");
static_assert(offsetof(UI_Update_Server_Btn_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'UI_Update_Server_Btn_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function UI_Update_Server_Btn.UI_Update_Server_Btn_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct UI_Update_Server_Btn_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Update_Server_Btn_C_OnMouseEnter) == 0x000008, "Wrong alignment on UI_Update_Server_Btn_C_OnMouseEnter");
static_assert(sizeof(UI_Update_Server_Btn_C_OnMouseEnter) == 0x0000A8, "Wrong size on UI_Update_Server_Btn_C_OnMouseEnter");
static_assert(offsetof(UI_Update_Server_Btn_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'UI_Update_Server_Btn_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'UI_Update_Server_Btn_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function UI_Update_Server_Btn.UI_Update_Server_Btn_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Update_Server_Btn_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Update_Server_Btn_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Update_Server_Btn_C_PreConstruct");
static_assert(sizeof(UI_Update_Server_Btn_C_PreConstruct) == 0x000001, "Wrong size on UI_Update_Server_Btn_C_PreConstruct");
static_assert(offsetof(UI_Update_Server_Btn_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Update_Server_Btn_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Update_Server_Btn.UI_Update_Server_Btn_C.Set Is Select
// 0x0001 (0x0001 - 0x0000)
struct UI_Update_Server_Btn_C_Set_Is_Select final
{
public:
	bool                                          Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Update_Server_Btn_C_Set_Is_Select) == 0x000001, "Wrong alignment on UI_Update_Server_Btn_C_Set_Is_Select");
static_assert(sizeof(UI_Update_Server_Btn_C_Set_Is_Select) == 0x000001, "Wrong size on UI_Update_Server_Btn_C_Set_Is_Select");
static_assert(offsetof(UI_Update_Server_Btn_C_Set_Is_Select, Index_0) == 0x000000, "Member 'UI_Update_Server_Btn_C_Set_Is_Select::Index_0' has a wrong offset!");

// Function UI_Update_Server_Btn.UI_Update_Server_Btn_C.SetInternationalServer
// 0x0001 (0x0001 - 0x0000)
struct UI_Update_Server_Btn_C_SetInternationalServer final
{
public:
	bool                                          IsInternationalServer_0;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Update_Server_Btn_C_SetInternationalServer) == 0x000001, "Wrong alignment on UI_Update_Server_Btn_C_SetInternationalServer");
static_assert(sizeof(UI_Update_Server_Btn_C_SetInternationalServer) == 0x000001, "Wrong size on UI_Update_Server_Btn_C_SetInternationalServer");
static_assert(offsetof(UI_Update_Server_Btn_C_SetInternationalServer, IsInternationalServer_0) == 0x000000, "Member 'UI_Update_Server_Btn_C_SetInternationalServer::IsInternationalServer_0' has a wrong offset!");

// Function UI_Update_Server_Btn.UI_Update_Server_Btn_C.SetState
// 0x000A (0x000A - 0x0000)
struct UI_Update_Server_Btn_C_SetState final
{
public:
	bool                                          State_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Update_Server_Btn_C_SetState) == 0x000001, "Wrong alignment on UI_Update_Server_Btn_C_SetState");
static_assert(sizeof(UI_Update_Server_Btn_C_SetState) == 0x00000A, "Wrong size on UI_Update_Server_Btn_C_SetState");
static_assert(offsetof(UI_Update_Server_Btn_C_SetState, State_0) == 0x000000, "Member 'UI_Update_Server_Btn_C_SetState::State_0' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_SetState, Temp_bool_Variable) == 0x000001, "Member 'UI_Update_Server_Btn_C_SetState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_SetState, Temp_byte_Variable) == 0x000002, "Member 'UI_Update_Server_Btn_C_SetState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_SetState, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Update_Server_Btn_C_SetState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_SetState, Temp_bool_Variable_1) == 0x000004, "Member 'UI_Update_Server_Btn_C_SetState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_SetState, Temp_byte_Variable_2) == 0x000005, "Member 'UI_Update_Server_Btn_C_SetState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_SetState, K2Node_Select_Default) == 0x000006, "Member 'UI_Update_Server_Btn_C_SetState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_SetState, Temp_byte_Variable_3) == 0x000007, "Member 'UI_Update_Server_Btn_C_SetState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_SetState, CallFunc_IsPCPlatform_IsPCPlatform) == 0x000008, "Member 'UI_Update_Server_Btn_C_SetState::CallFunc_IsPCPlatform_IsPCPlatform' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_SetState, K2Node_Select_Default_1) == 0x000009, "Member 'UI_Update_Server_Btn_C_SetState::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_Update_Server_Btn.UI_Update_Server_Btn_C.RefreshLatencyTxtColor
// 0x00A8 (0x00A8 - 0x0000)
struct UI_Update_Server_Btn_C_RefreshLatencyTxtColor final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Lobby_Latency                               Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0058(0x0028)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0080(0x0028)()
};
static_assert(alignof(UI_Update_Server_Btn_C_RefreshLatencyTxtColor) == 0x000008, "Wrong alignment on UI_Update_Server_Btn_C_RefreshLatencyTxtColor");
static_assert(sizeof(UI_Update_Server_Btn_C_RefreshLatencyTxtColor) == 0x0000A8, "Wrong size on UI_Update_Server_Btn_C_RefreshLatencyTxtColor");
static_assert(offsetof(UI_Update_Server_Btn_C_RefreshLatencyTxtColor, NewParam) == 0x000000, "Member 'UI_Update_Server_Btn_C_RefreshLatencyTxtColor::NewParam' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_RefreshLatencyTxtColor, Temp_byte_Variable) == 0x000004, "Member 'UI_Update_Server_Btn_C_RefreshLatencyTxtColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_RefreshLatencyTxtColor, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000005, "Member 'UI_Update_Server_Btn_C_RefreshLatencyTxtColor::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_RefreshLatencyTxtColor, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000006, "Member 'UI_Update_Server_Btn_C_RefreshLatencyTxtColor::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_RefreshLatencyTxtColor, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'UI_Update_Server_Btn_C_RefreshLatencyTxtColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_RefreshLatencyTxtColor, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'UI_Update_Server_Btn_C_RefreshLatencyTxtColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_RefreshLatencyTxtColor, K2Node_MakeStruct_SlateColor_2) == 0x000058, "Member 'UI_Update_Server_Btn_C_RefreshLatencyTxtColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(UI_Update_Server_Btn_C_RefreshLatencyTxtColor, K2Node_Select_Default) == 0x000080, "Member 'UI_Update_Server_Btn_C_RefreshLatencyTxtColor::K2Node_Select_Default' has a wrong offset!");

}

