#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Update

#include "Basic.hpp"

#include "UI_Update_classes.hpp"
#include "UI_Update_parameters.hpp"


namespace SDK
{

// Function UI_Update.UI_Update_C.ExecuteUbergraph_UI_Update
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Update_C::ExecuteUbergraph_UI_Update(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "ExecuteUbergraph_UI_Update");

	Params::UI_Update_C_ExecuteUbergraph_UI_Update Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Update.UI_Update_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Update_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "Tick");

	Params::UI_Update_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Update.UI_Update_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Update_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "PreConstruct");

	Params::UI_Update_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Update.UI_Update_C.FinishLoadLobby
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Update_C::FinishLoadLobby(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "FinishLoadLobby");

	Params::UI_Update_C_FinishLoadLobby Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Update.UI_Update_C.OnVideoReady
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Update_C::OnVideoReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "OnVideoReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Update.UI_Update_C.RefreshLoadingPoints
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Update_C::RefreshLoadingPoints(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "RefreshLoadingPoints");

	Params::UI_Update_C_RefreshLoadingPoints Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Update.UI_Update_C.RefreshLoadingPointsAr
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Update_C::RefreshLoadingPointsAr(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "RefreshLoadingPointsAr");

	Params::UI_Update_C_RefreshLoadingPointsAr Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Update.UI_Update_C.TextureArrayTestFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_Update_C::TextureArrayTestFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "TextureArrayTestFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Update.UI_Update_C.OnSolarUIOpened
// (Native, Event, Protected, BlueprintEvent)

void UUI_Update_C::OnSolarUIOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "OnSolarUIOpened");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UI_Update.UI_Update_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Update_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Update.UI_Update_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Update_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Update.UI_Update_C.RequestQuitGame
// (Event, Public, BlueprintEvent)

void UUI_Update_C::RequestQuitGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "RequestQuitGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Update.UI_Update_C.OnSolarUIClosed
// (Native, Event, Protected, BlueprintEvent)

void UUI_Update_C::OnSolarUIClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "OnSolarUIClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UI_Update.UI_Update_C.TryConnectGate
// (Event, Public, BlueprintEvent)

void UUI_Update_C::TryConnectGate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "TryConnectGate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Update.UI_Update_C.ReceiveTick
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Update_C::ReceiveTick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "ReceiveTick");

	Params::UI_Update_C_ReceiveTick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Update.UI_Update_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UUI_Update_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Update_C", "GetModuleName");

	Params::UI_Update_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

