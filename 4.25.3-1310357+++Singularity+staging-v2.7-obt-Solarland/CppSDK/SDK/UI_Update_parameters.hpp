#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Update

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_Update.UI_Update_C.ExecuteUbergraph_UI_Update
// 0x0044 (0x0044 - 0x0000)
struct UI_Update_C_ExecuteUbergraph_UI_Update final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Update_C_ExecuteUbergraph_UI_Update) == 0x000004, "Wrong alignment on UI_Update_C_ExecuteUbergraph_UI_Update");
static_assert(sizeof(UI_Update_C_ExecuteUbergraph_UI_Update) == 0x000044, "Wrong size on UI_Update_C_ExecuteUbergraph_UI_Update");
static_assert(offsetof(UI_Update_C_ExecuteUbergraph_UI_Update, EntryPoint) == 0x000000, "Member 'UI_Update_C_ExecuteUbergraph_UI_Update::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Update_C_ExecuteUbergraph_UI_Update, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_Update_C_ExecuteUbergraph_UI_Update::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Update_C_ExecuteUbergraph_UI_Update, K2Node_Event_MyGeometry) == 0x000008, "Member 'UI_Update_C_ExecuteUbergraph_UI_Update::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Update_C_ExecuteUbergraph_UI_Update, K2Node_Event_InDeltaTime) == 0x000040, "Member 'UI_Update_C_ExecuteUbergraph_UI_Update::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function UI_Update.UI_Update_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_Update_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Update_C_Tick) == 0x000004, "Wrong alignment on UI_Update_C_Tick");
static_assert(sizeof(UI_Update_C_Tick) == 0x00003C, "Wrong size on UI_Update_C_Tick");
static_assert(offsetof(UI_Update_C_Tick, MyGeometry) == 0x000000, "Member 'UI_Update_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Update_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_Update_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_Update.UI_Update_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Update_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Update_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Update_C_PreConstruct");
static_assert(sizeof(UI_Update_C_PreConstruct) == 0x000001, "Wrong size on UI_Update_C_PreConstruct");
static_assert(offsetof(UI_Update_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Update_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Update.UI_Update_C.FinishLoadLobby
// 0x0008 (0x0008 - 0x0000)
struct UI_Update_C_FinishLoadLobby final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Update_C_FinishLoadLobby) == 0x000004, "Wrong alignment on UI_Update_C_FinishLoadLobby");
static_assert(sizeof(UI_Update_C_FinishLoadLobby) == 0x000008, "Wrong size on UI_Update_C_FinishLoadLobby");
static_assert(offsetof(UI_Update_C_FinishLoadLobby, Type) == 0x000000, "Member 'UI_Update_C_FinishLoadLobby::Type' has a wrong offset!");
static_assert(offsetof(UI_Update_C_FinishLoadLobby, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'UI_Update_C_FinishLoadLobby::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function UI_Update.UI_Update_C.OnVideoReady
// 0x0008 (0x0008 - 0x0000)
struct UI_Update_C_OnVideoReady final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Update_C_OnVideoReady) == 0x000008, "Wrong alignment on UI_Update_C_OnVideoReady");
static_assert(sizeof(UI_Update_C_OnVideoReady) == 0x000008, "Wrong size on UI_Update_C_OnVideoReady");
static_assert(offsetof(UI_Update_C_OnVideoReady, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'UI_Update_C_OnVideoReady::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UI_Update.UI_Update_C.RefreshLoadingPoints
// 0x0004 (0x0004 - 0x0000)
struct UI_Update_C_RefreshLoadingPoints final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Update_C_RefreshLoadingPoints) == 0x000004, "Wrong alignment on UI_Update_C_RefreshLoadingPoints");
static_assert(sizeof(UI_Update_C_RefreshLoadingPoints) == 0x000004, "Wrong size on UI_Update_C_RefreshLoadingPoints");
static_assert(offsetof(UI_Update_C_RefreshLoadingPoints, Index_0) == 0x000000, "Member 'UI_Update_C_RefreshLoadingPoints::Index_0' has a wrong offset!");

// Function UI_Update.UI_Update_C.RefreshLoadingPointsAr
// 0x0004 (0x0004 - 0x0000)
struct UI_Update_C_RefreshLoadingPointsAr final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Update_C_RefreshLoadingPointsAr) == 0x000004, "Wrong alignment on UI_Update_C_RefreshLoadingPointsAr");
static_assert(sizeof(UI_Update_C_RefreshLoadingPointsAr) == 0x000004, "Wrong size on UI_Update_C_RefreshLoadingPointsAr");
static_assert(offsetof(UI_Update_C_RefreshLoadingPointsAr, Index_0) == 0x000000, "Member 'UI_Update_C_RefreshLoadingPointsAr::Index_0' has a wrong offset!");

// Function UI_Update.UI_Update_C.TextureArrayTestFunc
// 0x0050 (0x0050 - 0x0000)
struct UI_Update_C_TextureArrayTestFunc final
{
public:
	bool                                          CallFunc_IsEnabledTextureArrayTest_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AA_TextureArrayTest_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Update_C_TextureArrayTestFunc) == 0x000010, "Wrong alignment on UI_Update_C_TextureArrayTestFunc");
static_assert(sizeof(UI_Update_C_TextureArrayTestFunc) == 0x000050, "Wrong size on UI_Update_C_TextureArrayTestFunc");
static_assert(offsetof(UI_Update_C_TextureArrayTestFunc, CallFunc_IsEnabledTextureArrayTest_ReturnValue) == 0x000000, "Member 'UI_Update_C_TextureArrayTestFunc::CallFunc_IsEnabledTextureArrayTest_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Update_C_TextureArrayTestFunc, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'UI_Update_C_TextureArrayTestFunc::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Update_C_TextureArrayTestFunc, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'UI_Update_C_TextureArrayTestFunc::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Update_C_TextureArrayTestFunc, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'UI_Update_C_TextureArrayTestFunc::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function UI_Update.UI_Update_C.ReceiveTick
// 0x003C (0x003C - 0x0000)
struct UI_Update_C_ReceiveTick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_Update_C_ReceiveTick) == 0x000004, "Wrong alignment on UI_Update_C_ReceiveTick");
static_assert(sizeof(UI_Update_C_ReceiveTick) == 0x00003C, "Wrong size on UI_Update_C_ReceiveTick");
static_assert(offsetof(UI_Update_C_ReceiveTick, MyGeometry) == 0x000000, "Member 'UI_Update_C_ReceiveTick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Update_C_ReceiveTick, InDeltaTime) == 0x000038, "Member 'UI_Update_C_ReceiveTick::InDeltaTime' has a wrong offset!");

// Function UI_Update.UI_Update_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_Update_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_Update_C_GetModuleName) == 0x000008, "Wrong alignment on UI_Update_C_GetModuleName");
static_assert(sizeof(UI_Update_C_GetModuleName) == 0x000010, "Wrong size on UI_Update_C_GetModuleName");
static_assert(offsetof(UI_Update_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_Update_C_GetModuleName::ReturnValue' has a wrong offset!");

}

