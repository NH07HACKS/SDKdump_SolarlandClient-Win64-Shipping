#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnLua

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// ScriptStruct UnLua.PropertyCollector
// 0x0008 (0x0008 - 0x0000)
struct FPropertyCollector final
{
public:
	struct FTutorialTableRow                      None;                                              // 0x0000(0x00B8)(HasGetValueTypeHash)
	struct FInputChord                            None_0;                                            // 0x0000(0x0020)(HasGetValueTypeHash)
	struct FInputKeyMappingEntry                  None_1;                                            // 0x0000(0x0040)(HasGetValueTypeHash)
};
static_assert(alignof(FPropertyCollector) == 0x000008, "Wrong alignment on FPropertyCollector");
static_assert(sizeof(FPropertyCollector) == 0x000008, "Wrong size on FPropertyCollector");
static_assert(offsetof(FPropertyCollector, None) == 0x000000, "Member 'FPropertyCollector::None' has a wrong offset!");
static_assert(offsetof(FPropertyCollector, None_0) == 0x000000, "Member 'FPropertyCollector::None_0' has a wrong offset!");
static_assert(offsetof(FPropertyCollector, None_1) == 0x000000, "Member 'FPropertyCollector::None_1' has a wrong offset!");

// ScriptStruct UnLua.InSightEvent
// 0x0001 (0x0001 - 0x0000)
struct FInSightEvent final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FInSightEvent) == 0x000001, "Wrong alignment on FInSightEvent");
static_assert(sizeof(FInSightEvent) == 0x000001, "Wrong size on FInSightEvent");

}

